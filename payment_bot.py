from aiogram import Bot, Dispatcher, types
from aiogram.types import LabeledPrice, PreCheckoutQuery
from aiogram.utils import executor
import logging

TOKEN = "8117246169:AAESfMHEFdkF-EAkKVZVIqpMjpK56vPbBBA"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ BotFather
STRIPE_PROVIDER_TOKEN = "sk_test_51R8OCxPOgO9x9v463D9ZwrzHAVlc0Jj3yLQIx4KOW6qHJ4pwaEj0ZvT8hWaBPy9AMt5W3DvgfqvkG4Z77BOBnLMa00yH5kwfSF"  # –°—é–¥–∞ –≤—Å—Ç–∞–≤—å Secret Key –∏–∑ Stripe
FILE_PATH = "file.pdf"  # –§–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª.", reply_markup=types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data="buy")
    ))

@dp.callback_query_handler(lambda c: c.data == "buy")
async def buy(call: types.CallbackQuery):
    prices = [LabeledPrice(label="–§–∞–π–ª", amount=500 * 100)]  # –¶–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö (500 RUB)
    await bot.send_invoice(
        chat_id=call.message.chat.id,
        title="–ü–æ–∫—É–ø–∫–∞ —Ñ–∞–π–ª–∞",
        description="–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª.",
        payload="file_purchase",
        provider_token=STRIPE_PROVIDER_TOKEN,
        currency="rub",
        prices=prices,
        start_parameter="purchase_file",
        provider_data=None,
        need_email=True,
        need_phone_number=False,
    )

@dp.pre_checkout_query_handler(lambda query: True)
async def checkout(pre_checkout_query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

@dp.message_handler(content_types=types.ContentType.SUCCESSFUL_PAYMENT)
async def successful_payment(message: types.Message):
    await message.answer("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í–æ—Ç –≤–∞—à —Ñ–∞–π–ª:")
    with open(FILE_PATH, "rb") as file:
        await bot.send_document(message.chat.id, file)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
